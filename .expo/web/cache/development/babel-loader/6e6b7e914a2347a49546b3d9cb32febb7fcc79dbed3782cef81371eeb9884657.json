{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport io from \"socket.io-client\";\nimport { RNCamera } from 'react-native-camera';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CameraConnectScreen = function CameraConnectScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    connected = _useState2[0],\n    setConnected = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    devices = _useState4[0],\n    setDevices = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDevice = _useState6[0],\n    setSelectedDevice = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    socket = _useState8[0],\n    setSocket = _useState8[1];\n  var cameraRef = useRef(null);\n  useEffect(function () {\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      var cameras = devices.filter(function (device) {\n        return device.kind === \"videoinput\";\n      });\n      setDevices(cameras);\n    });\n  }, []);\n  useEffect(function () {\n    if (socket) {\n      var imageSendingInterval = setInterval(function () {\n        handleSendImage();\n      }, 5000);\n      return function () {\n        clearInterval(imageSendingInterval);\n      };\n    }\n  }, [socket]);\n  var handleConnect = function handleConnect() {\n    setConnected(true);\n    var newSocket = io(\"http://localhost:5000\");\n    setSocket(newSocket);\n    console.log(\"Connected successfully\", newSocket);\n  };\n  var handleSendImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      console.log(\"Sending image\");\n      if (socket && selectedDevice && cameraRef.current) {\n        var options = {\n          quality: 0.5,\n          base64: true\n        };\n        var imageSrc = yield cameraRef.current.takePictureAsync(options);\n        var formData = new FormData();\n        formData.append(\"image\", {\n          uri: imageSrc.uri,\n          name: \"image.jpg\",\n          type: \"image/jpeg\"\n        });\n        console.log(formData);\n        socket.emit(\"image\", {\n          image: formData\n        });\n      }\n    });\n    return function handleSendImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: !connected ? _jsxs(View, {\n      children: [_jsxs(Picker, {\n        selectedValue: selectedDevice,\n        onValueChange: function onValueChange(value) {\n          return setSelectedDevice(value);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Select camera\",\n          value: \"\"\n        }), devices.map(function (device) {\n          return _jsx(Picker.Item, {\n            label: device.label || \"Camera \" + device.deviceId,\n            value: device.deviceId\n          }, device.deviceId);\n        })]\n      }), _jsx(Button, {\n        title: \"Connect to Camera\",\n        onPress: handleConnect,\n        disabled: !selectedDevice\n      })]\n    }) : _jsx(View, {\n      style: styles.cameraContainer,\n      children: _jsx(RNCamera, {\n        style: styles.cameraPreview,\n        type: RNCamera.Constants.Type.front,\n        ref: cameraRef\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  cameraContainer: {\n    flex: 1\n  },\n  cameraPreview: {\n    flex: 1\n  }\n});\nexport default CameraConnectScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Picker","Button","StyleSheet","io","RNCamera","jsx","_jsx","jsxs","_jsxs","CameraConnectScreen","_useState","_useState2","_slicedToArray","connected","setConnected","_useState3","_useState4","devices","setDevices","_useState5","_useState6","selectedDevice","setSelectedDevice","_useState7","_useState8","socket","setSocket","cameraRef","navigator","mediaDevices","enumerateDevices","then","cameras","filter","device","kind","imageSendingInterval","setInterval","handleSendImage","clearInterval","handleConnect","newSocket","console","log","_ref","_asyncToGenerator","current","options","quality","base64","imageSrc","takePictureAsync","formData","FormData","append","uri","name","type","emit","image","apply","arguments","children","selectedValue","onValueChange","value","Item","label","map","deviceId","title","onPress","disabled","style","styles","cameraContainer","cameraPreview","Constants","Type","front","ref","create","flex"],"sources":["C:/Users/Deth1/Desarrollo/mineriaProyectoFront/src/Screens/CameraConnectScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View, Picker, Button, StyleSheet } from \"react-native\";\r\nimport io from \"socket.io-client\";\r\nimport { RNCamera } from 'react-native-camera';\r\n\r\nconst CameraConnectScreen = () => {\r\n  const [connected, setConnected] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const cameraRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const cameras = devices.filter((device) => device.kind === \"videoinput\");\r\n      setDevices(cameras);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      const imageSendingInterval = setInterval(() => {\r\n        handleSendImage();\r\n      }, 5000);\r\n\r\n      return () => {\r\n        clearInterval(imageSendingInterval);\r\n      };\r\n    }\r\n  }, [socket]);\r\n\r\n  const handleConnect = () => {\r\n    setConnected(true);\r\n    const newSocket = io(\"http://localhost:5000\");\r\n    setSocket(newSocket);\r\n    console.log(\"Connected successfully\", newSocket);\r\n  };\r\n\r\n  const handleSendImage = async () => {\r\n    console.log(\"Sending image\");\r\n    if (socket && selectedDevice && cameraRef.current) {\r\n      const options = { quality: 0.5, base64: true };\r\n      const imageSrc = await cameraRef.current.takePictureAsync(options);\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"image\", {\r\n        uri: imageSrc.uri,\r\n        name: \"image.jpg\",\r\n        type: \"image/jpeg\",\r\n      });\r\n\r\n      console.log(formData);\r\n\r\n      socket.emit(\"image\", { image: formData });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {!connected ? (\r\n        <View>\r\n          <Picker\r\n            selectedValue={selectedDevice}\r\n            onValueChange={(value) => setSelectedDevice(value)}\r\n          >\r\n            <Picker.Item label=\"Select camera\" value=\"\" />\r\n            {devices.map((device) => (\r\n              <Picker.Item\r\n                key={device.deviceId}\r\n                label={device.label || `Camera ${device.deviceId}`}\r\n                value={device.deviceId}\r\n              />\r\n            ))}\r\n          </Picker>\r\n          <Button\r\n            title=\"Connect to Camera\"\r\n            onPress={handleConnect}\r\n            disabled={!selectedDevice}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.cameraContainer}>\r\n          <RNCamera\r\n            style={styles.cameraPreview}\r\n            type={RNCamera.Constants.Type.front}\r\n            ref={cameraRef}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  cameraContainer: {\r\n    flex: 1,\r\n  },\r\n  cameraPreview: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default CameraConnectScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
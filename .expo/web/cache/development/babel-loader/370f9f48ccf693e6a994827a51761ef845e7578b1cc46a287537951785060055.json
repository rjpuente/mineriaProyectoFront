{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { FormControl, Select, MenuItem, Button } from \"@mui/material\";\nimport io from \"socket.io-client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CameraConnectScreen = function CameraConnectScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    connected = _useState2[0],\n    setConnected = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    devices = _useState4[0],\n    setDevices = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDevice = _useState6[0],\n    setSelectedDevice = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    socket = _useState8[0],\n    setSocket = _useState8[1];\n  var webcamRef = useRef(null);\n  useEffect(function () {\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      var cameras = devices.filter(function (device) {\n        return device.kind === \"videoinput\";\n      });\n      setDevices(cameras);\n    });\n  }, []);\n  var handleConnect = function handleConnect() {\n    setConnected(true);\n    var newSocket = io(\"http://localhost:5000\");\n    setSocket(newSocket);\n  };\n  var handleSendImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      console.log(\"Sending image...\");\n      if (socket && selectedDevice && webcamRef.current) {\n        var imageSrc = webcamRef.current.getScreenshot();\n        var res = yield fetch(imageSrc);\n        var blob = yield res.blob();\n        var imageFile = new File([blob], \"image.png\", {\n          type: \"image/png\"\n        });\n        var formData = new FormData();\n        formData.append(\"image\", imageFile);\n        socket.emit(\"image\", {\n          image: formData\n        });\n      }\n    });\n    return function handleSendImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(\"div\", {\n    children: !connected ? _jsxs(\"div\", {\n      children: [_jsx(FormControl, {\n        children: _jsxs(Select, {\n          value: selectedDevice,\n          onChange: function onChange(e) {\n            return setSelectedDevice(e.target.value);\n          },\n          children: [_jsx(MenuItem, {\n            value: \"\",\n            children: \"Seleccionar c\\xE1mara\"\n          }), devices.map(function (device) {\n            return _jsx(MenuItem, {\n              value: device.deviceId,\n              children: device.label || \"C\\xE1mara \" + device.deviceId\n            }, device.deviceId);\n          })]\n        })\n      }), _jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleConnect,\n        disabled: !selectedDevice,\n        children: \"Conectar a la c\\xE1mara\"\n      })]\n    }) : _jsxs(\"div\", {\n      children: [_jsx(Webcam, {\n        audio: false,\n        videoConstraints: {\n          deviceId: selectedDevice\n        },\n        ref: webcamRef\n      }), _jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendImage,\n        children: \"Enviar imagen\"\n      })]\n    })\n  });\n};\nexport default CameraConnectScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","Webcam","FormControl","Select","MenuItem","Button","io","jsx","_jsx","jsxs","_jsxs","CameraConnectScreen","_useState","_useState2","_slicedToArray","connected","setConnected","_useState3","_useState4","devices","setDevices","_useState5","_useState6","selectedDevice","setSelectedDevice","_useState7","_useState8","socket","setSocket","webcamRef","navigator","mediaDevices","enumerateDevices","then","cameras","filter","device","kind","handleConnect","newSocket","handleSendImage","_ref","_asyncToGenerator","console","log","current","imageSrc","getScreenshot","res","fetch","blob","imageFile","File","type","formData","FormData","append","emit","image","apply","arguments","children","value","onChange","e","target","map","deviceId","label","variant","color","onClick","disabled","audio","videoConstraints","ref"],"sources":["C:/Users/Deth1/Desarrollo/mineriaProyectoFront/src/Screens/CameraConnectScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { FormControl, Select, MenuItem, Button } from \"@mui/material\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst CameraConnectScreen = () => {\r\n  const [connected, setConnected] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const webcamRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const cameras = devices.filter((device) => device.kind === \"videoinput\");\r\n      setDevices(cameras);\r\n    });\r\n  }, []);\r\n\r\n  const handleConnect = () => {\r\n    setConnected(true);\r\n    const newSocket = io(\"http://localhost:5000\");\r\n    setSocket(newSocket);\r\n  };\r\n\r\n  const handleSendImage = async () => {\r\n    console.log(\"Sending image...\");\r\n    if (socket && selectedDevice && webcamRef.current) {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      const res = await fetch(imageSrc);\r\n      const blob = await res.blob();\r\n      const imageFile = new File([blob], \"image.png\", { type: \"image/png\" });\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"image\", imageFile);\r\n\r\n      socket.emit(\"image\", { image: formData });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!connected ? (\r\n        <div>\r\n          <FormControl>\r\n            <Select\r\n              value={selectedDevice}\r\n              onChange={(e) => setSelectedDevice(e.target.value)}\r\n            >\r\n              <MenuItem value=\"\">Seleccionar cámara</MenuItem>\r\n              {devices.map((device) => (\r\n                <MenuItem\r\n                  key={device.deviceId}\r\n                  value={device.deviceId}\r\n                >\r\n                  {device.label || `Cámara ${device.deviceId}`}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleConnect}\r\n            disabled={!selectedDevice}\r\n          >\r\n            Conectar a la cámara\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Webcam audio={false} videoConstraints={{ deviceId: selectedDevice }} ref={webcamRef} />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSendImage}\r\n          >\r\n            Enviar imagen\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraConnectScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
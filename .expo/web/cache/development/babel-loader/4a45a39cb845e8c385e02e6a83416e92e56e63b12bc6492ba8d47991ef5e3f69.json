{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport io from \"socket.io-client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CameraConnectScreen = function CameraConnectScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    connected = _useState2[0],\n    setConnected = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    devices = _useState4[0],\n    setDevices = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDevice = _useState6[0],\n    setSelectedDevice = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    socket = _useState8[0],\n    setSocket = _useState8[1];\n  var webcamRef = useRef(null);\n  useEffect(function () {\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      var cameras = devices.filter(function (device) {\n        return device.kind === \"videoinput\";\n      });\n      setDevices(cameras);\n    });\n  }, []);\n  useEffect(function () {\n    if (socket) {\n      var imageSendingInterval = setInterval(function () {\n        handleSendImage();\n      }, 5000);\n      return function () {\n        clearInterval(imageSendingInterval);\n      };\n    }\n  }, [socket]);\n  useEffect(function () {\n    if (socket) {\n      socket.on(\"prediction\", function (response) {\n        console.log(\"Prediction received:\", response);\n      });\n    }\n  }, [socket]);\n  var handleConnect = function handleConnect() {\n    setConnected(true);\n    var newSocket = io(\"http://localhost:5000\");\n    setSocket(newSocket);\n    console.log(\"Connected successfully\", newSocket);\n  };\n  var handleSendImage = function handleSendImage() {\n    console.log(\"Sending image\");\n    if (socket && selectedDevice && webcamRef.current) {\n      var imageSrc = webcamRef.current.getScreenshot();\n      fetch(imageSrc).then(function (response) {\n        return response.blob();\n      }).then(function (blob) {\n        var formData = new FormData();\n        formData.append(\"image\", blob, \"image.png\");\n        socket.emit(\"image\", formData);\n      });\n    }\n  };\n  return _jsx(View, {\n    children: !connected ? _jsxs(View, {\n      children: [_jsxs(Picker, {\n        selectedValue: selectedDevice,\n        onValueChange: function onValueChange(value) {\n          return setSelectedDevice(value);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Seleccionar c\\xE1mara\",\n          value: \"\"\n        }), devices.map(function (device) {\n          return _jsx(Picker.Item, {\n            label: device.label || \"C\\xE1mara \" + device.deviceId,\n            value: device.deviceId\n          }, device.deviceId);\n        })]\n      }), _jsx(Button, {\n        title: \"Conectar a la c\\xE1mara\",\n        onPress: handleConnect,\n        disabled: !selectedDevice\n      })]\n    }) : _jsx(View, {\n      style: styles.webcamContainer,\n      children: _jsx(Webcam, {\n        audio: false,\n        videoConstraints: {\n          deviceId: selectedDevice\n        },\n        ref: webcamRef\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  webcamContainer: {\n    flex: 1\n  }\n});\nexport default CameraConnectScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","Webcam","View","Picker","Button","StyleSheet","io","jsx","_jsx","jsxs","_jsxs","CameraConnectScreen","_useState","_useState2","_slicedToArray","connected","setConnected","_useState3","_useState4","devices","setDevices","_useState5","_useState6","selectedDevice","setSelectedDevice","_useState7","_useState8","socket","setSocket","webcamRef","navigator","mediaDevices","enumerateDevices","then","cameras","filter","device","kind","imageSendingInterval","setInterval","handleSendImage","clearInterval","on","response","console","log","handleConnect","newSocket","current","imageSrc","getScreenshot","fetch","blob","formData","FormData","append","emit","children","selectedValue","onValueChange","value","Item","label","map","deviceId","title","onPress","disabled","style","styles","webcamContainer","audio","videoConstraints","ref","create","flex"],"sources":["C:/Users/Deth1/Desarrollo/mineriaProyectoFront/src/Screens/CameraConnectScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { View, Picker, Button, StyleSheet } from \"react-native\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst CameraConnectScreen = () => {\r\n  const [connected, setConnected] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const webcamRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const cameras = devices.filter((device) => device.kind === \"videoinput\");\r\n      setDevices(cameras);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      const imageSendingInterval = setInterval(() => {\r\n        handleSendImage();\r\n      }, 5000);\r\n\r\n      return () => {\r\n        clearInterval(imageSendingInterval);\r\n      };\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      // Manejar el evento de predicción recibida\r\n      socket.on(\"prediction\", (response) => {\r\n        console.log(\"Prediction received:\", response); // Mostrar la predicción por consola\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const handleConnect = () => {\r\n    setConnected(true);\r\n    const newSocket = io(\"http://localhost:5000\");\r\n    setSocket(newSocket);\r\n    console.log(\"Connected successfully\", newSocket);\r\n  };\r\n\r\n  const handleSendImage = () => {\r\n    console.log(\"Sending image\");\r\n    if (socket && selectedDevice && webcamRef.current) {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n\r\n      fetch(imageSrc)\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n          const formData = new FormData();\r\n          formData.append(\"image\", blob, \"image.png\");\r\n          socket.emit(\"image\", formData);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {!connected ? (\r\n        <View>\r\n          <Picker\r\n            selectedValue={selectedDevice}\r\n            onValueChange={(value) => setSelectedDevice(value)}\r\n          >\r\n            <Picker.Item label=\"Seleccionar cámara\" value=\"\" />\r\n            {devices.map((device) => (\r\n              <Picker.Item\r\n                key={device.deviceId}\r\n                label={device.label || `Cámara ${device.deviceId}`}\r\n                value={device.deviceId}\r\n              />\r\n            ))}\r\n          </Picker>\r\n          <Button\r\n            title=\"Conectar a la cámara\"\r\n            onPress={handleConnect}\r\n            disabled={!selectedDevice}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.webcamContainer}>\r\n          <Webcam\r\n            audio={false}\r\n            videoConstraints={{ deviceId: selectedDevice }}\r\n            ref={webcamRef}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  webcamContainer: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default CameraConnectScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
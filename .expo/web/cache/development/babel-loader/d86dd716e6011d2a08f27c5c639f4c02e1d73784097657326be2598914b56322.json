{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { List } from \"react-native-web/dist/index\";\nimport { ListItem } from \"react-native-web/dist/index\";\nimport Webcam from \"react-webcam\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CameraConnectScreen = function CameraConnectScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cameras = _useState2[0],\n    setCameras = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    camera = _useState4[0],\n    setCamera = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    cameraId = _useState6[0],\n    setCameraId = _useState6[1];\n  useEffect(function () {\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      setCameras(devices.filter(function (device) {\n        return device.kind === \"videoinput\";\n      }));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  var handleConnect = function handleConnect() {\n    setCamera(cameras[cameraId]);\n  };\n  var handleShowCamera = function handleShowCamera() {\n    var webcam = useRef(null);\n    webcam.current.play();\n  };\n  return _jsxs(View, {\n    children: [_jsx(List, {\n      data: cameras,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ListItem, {\n          title: item.name,\n          onPress: function onPress() {\n            return setCameraId(item.deviceId);\n          }\n        }, item.deviceId);\n      }\n    }), _jsx(Button, {\n      title: \"Conectar\",\n      onPress: handleConnect\n    }), _jsx(Button, {\n      title: \"Mostrar c\\xE1mara\",\n      onPress: handleShowCamera\n    })]\n  });\n};\nexport default CameraConnectScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Button","List","ListItem","Webcam","jsx","_jsx","jsxs","_jsxs","CameraConnectScreen","_useState","_useState2","_slicedToArray","cameras","setCameras","_useState3","_useState4","camera","setCamera","_useState5","_useState6","cameraId","setCameraId","navigator","mediaDevices","enumerateDevices","then","devices","filter","device","kind","catch","err","console","log","handleConnect","handleShowCamera","webcam","useRef","current","play","children","data","renderItem","_ref","item","title","name","onPress","deviceId"],"sources":["C:/Users/Deth1/Desarrollo/mineriaProyectoFront/src/Screens/CameraConnectScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, TextInput, Button, List, ListItem } from \"react-native\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nconst CameraConnectScreen = () => {\r\n  const [cameras, setCameras] = useState([]);\r\n  const [camera, setCamera] = useState(null);\r\n  const [cameraId, setCameraId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Obtener la lista de c치maras disponibles\r\n    navigator.mediaDevices\r\n      .enumerateDevices()\r\n      .then(devices => {\r\n        setCameras(devices.filter(device => device.kind === \"videoinput\"));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  const handleConnect = () => {\r\n    // Conectar a la c치mara seleccionada\r\n    setCamera(cameras[cameraId]);\r\n  };\r\n\r\n  const handleShowCamera = () => {\r\n    // Mostrar la c치mara en tiempo real\r\n    const webcam = useRef(null);\r\n    webcam.current.play();\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <List\r\n        data={cameras}\r\n        renderItem={({ item }) => (\r\n          <ListItem\r\n            key={item.deviceId}\r\n            title={item.name}\r\n            onPress={() => setCameraId(item.deviceId)}\r\n          />\r\n        )}\r\n      />\r\n      <Button\r\n        title=\"Conectar\"\r\n        onPress={handleConnect}\r\n      />\r\n      <Button\r\n        title=\"Mostrar c치mara\"\r\n        onPress={handleShowCamera}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CameraConnectScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,SACjBC,IAAI;AAAA,SAAEC,QAAQ;AAChD,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAChC,IAAAC,SAAA,GAA8Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA4BlB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAAgCtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAvCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5BtB,SAAS,CAAC,YAAM;IAEdyB,SAAS,CAACC,YAAY,CACnBC,gBAAgB,CAAC,CAAC,CAClBC,IAAI,CAAC,UAAAC,OAAO,EAAI;MACfb,UAAU,CAACa,OAAO,CAACC,MAAM,CAAC,UAAAC,MAAM;QAAA,OAAIA,MAAM,CAACC,IAAI,KAAK,YAAY;MAAA,EAAC,CAAC;IACpE,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,GAAG;MAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAAA,EAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAE1BjB,SAAS,CAACL,OAAO,CAACQ,QAAQ,CAAC,CAAC;EAC9B,CAAC;EAED,IAAMe,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAE7B,IAAMC,MAAM,GAAGC,MAAM,CAAC,IAAI,CAAC;IAC3BD,MAAM,CAACE,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB,CAAC;EAED,OACEhC,KAAA,CAACT,IAAI;IAAA0C,QAAA,GACHnC,IAAA,CAACJ,IAAI;MACHwC,IAAI,EAAE7B,OAAQ;MACd8B,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;QAAA,OACjBvC,IAAA,CAACH,QAAQ;UAEP2C,KAAK,EAAED,IAAI,CAACE,IAAK;UACjBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM1B,WAAW,CAACuB,IAAI,CAACI,QAAQ,CAAC;UAAA;QAAC,GAFrCJ,IAAI,CAACI,QAGX,CAAC;MAAA;IACF,CACH,CAAC,EACF3C,IAAA,CAACL,MAAM;MACL6C,KAAK,EAAC,UAAU;MAChBE,OAAO,EAAEb;IAAc,CACxB,CAAC,EACF7B,IAAA,CAACL,MAAM;MACL6C,KAAK,EAAC,mBAAgB;MACtBE,OAAO,EAAEZ;IAAiB,CAC3B,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,eAAe3B,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
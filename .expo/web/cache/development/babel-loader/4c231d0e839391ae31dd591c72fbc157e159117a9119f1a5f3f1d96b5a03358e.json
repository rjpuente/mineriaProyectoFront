{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { COLORS } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    navigation.navigate('Home');\n    console.log('Registrando usuario:', email);\n    console.log('Contraseña:', password);\n  };\n  var handleRegisterPress = function handleRegisterPress() {\n    navigation.navigate('Register');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"\\xA1Hola de nuevo!\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Correo Electr\\xF3nico\",\n      value: email,\n      onChangeText: setEmail,\n      placeholderTextColor: COLORS.LIGHT_GRAY\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      placeholderTextColor: COLORS.LIGHT_GRAY\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Iniciar Sesi\\xF3n\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.registerButton,\n      onPress: handleRegisterPress,\n      children: _jsx(Text, {\n        style: styles.registerButtonText,\n        children: \"Crear una cuenta\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.WHITE\n  },\n  title: {\n    fontSize: 32,\n    marginBottom: 20,\n    color: COLORS.PRIMARY,\n    fontWeight: 'bold'\n  },\n  input: {\n    width: '80%',\n    height: 50,\n    borderColor: COLORS.LIGHT_GRAY,\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 20,\n    color: COLORS.DARK_GRAY,\n    borderRadius: 10\n  },\n  loginButton: {\n    backgroundColor: COLORS.PRIMARY,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 25,\n    marginBottom: 10\n  },\n  buttonText: {\n    color: COLORS.PRIMARY,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  registerButton: {\n    borderColor: COLORS.PRIMARY,\n    borderWidth: 2,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 25\n  },\n  registerButtonText: {\n    color: COLORS.PRIMARY,\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","COLORS","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","navigate","console","log","handleRegisterPress","style","styles","container","children","title","input","placeholder","value","onChangeText","placeholderTextColor","LIGHT_GRAY","secureTextEntry","loginButton","onPress","buttonText","registerButton","registerButtonText","create","flex","justifyContent","alignItems","backgroundColor","WHITE","fontSize","marginBottom","color","PRIMARY","fontWeight","width","height","borderColor","borderWidth","paddingHorizontal","DARK_GRAY","borderRadius","paddingVertical","textAlign"],"sources":["C:/xampp/htdocs/mineriaProyectoFront/src/screens/LoginScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { COLORS } from '../constants';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Aquí podrías implementar la lógica de autenticación\r\n    // Por ahora, vamos a asumir que el inicio de sesión es exitoso\r\n    navigation.navigate('Home');\r\n    console.log('Registrando usuario:', email);\r\n    console.log('Contraseña:', password);\r\n  };\r\n\r\n  const handleRegisterPress = () => {\r\n    navigation.navigate('Register'); // Navegar a la pantalla Register\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>¡Hola de nuevo!</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Correo Electrónico\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        placeholderTextColor={COLORS.LIGHT_GRAY}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Contraseña\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        placeholderTextColor={COLORS.LIGHT_GRAY}\r\n      />\r\n      <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n        <Text style={styles.buttonText}>Iniciar Sesión</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.registerButton} onPress={handleRegisterPress}>\r\n        <Text style={styles.registerButtonText}>Crear una cuenta</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: COLORS.WHITE,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: COLORS.PRIMARY,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    height: 50,\r\n    borderColor: COLORS.LIGHT_GRAY,\r\n    borderWidth: 1,\r\n    marginBottom: 20,\r\n    paddingHorizontal: 20,\r\n    color: COLORS.DARK_GRAY,\r\n    borderRadius: 10,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: COLORS.PRIMARY,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: COLORS.PRIMARY,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  registerButton: {\r\n    borderColor: COLORS.PRIMARY,\r\n    borderWidth: 2,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n  },\r\n  registerButtonText: {\r\n    color: COLORS.PRIMARY,\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
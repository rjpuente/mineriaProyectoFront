{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Formik } from 'formik';\nimport { COLORS } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* (values) {\n      try {\n        var token = 'tokenEjemplo';\n        yield login(token);\n        navigation.navigate('Home');\n      } catch (error) {}\n    });\n    return function handleLogin(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRegisterPress = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        navigation.navigate('Register');\n      } catch (error) {}\n    });\n    return function handleRegisterPress() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"\\xA1Hola de nuevo!\"\n    }), _jsx(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: function onSubmit(values) {\n        return handleLogin(values);\n      },\n      children: function children(_ref4) {\n        var handleChange = _ref4.handleChange,\n          handleSubmit = _ref4.handleSubmit,\n          values = _ref4.values;\n        return _jsxs(View, {\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Correo Electr\\xF3nico\",\n            value: values.email,\n            onChangeText: handleChange('email'),\n            placeholderTextColor: COLORS.LIGHT_GRAY\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Contrase\\xF1a\",\n            secureTextEntry: true,\n            value: values.password,\n            onChangeText: handleChange('password'),\n            placeholderTextColor: COLORS.LIGHT_GRAY\n          }), _jsx(TouchableOpacity, {\n            style: styles.loginButton,\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Iniciar Sesi\\xF3n\"\n            })\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.registerButton,\n      onPress: handleRegisterPress,\n      children: _jsx(Text, {\n        style: styles.registerButtonText,\n        children: \"Crear una cuenta\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.WHITE\n  },\n  title: {\n    fontSize: 32,\n    marginBottom: 20,\n    color: COLORS.PRIMARY,\n    fontWeight: 'bold'\n  },\n  input: {\n    width: '80%',\n    height: 50,\n    borderColor: COLORS.LIGHT_GRAY,\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 20,\n    color: COLORS.DARK_GRAY,\n    borderRadius: 10\n  },\n  loginButton: {\n    borderColor: COLORS.PRIMARY,\n    borderWidth: 2,\n    backgroundColor: COLORS.PRIMARY,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 25,\n    marginBottom: 10\n  },\n  buttonText: {\n    color: COLORS.PRIMARY,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  registerButton: {\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 25\n  },\n  registerButtonText: {\n    color: COLORS.PRIMARY,\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useContext","View","Text","TextInput","TouchableOpacity","StyleSheet","AuthContext","Formik","COLORS","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useContext","login","handleLogin","_ref2","_asyncToGenerator","values","token","navigate","error","_x","apply","arguments","handleRegisterPress","_ref3","style","styles","container","children","title","initialValues","email","password","onSubmit","_ref4","handleChange","handleSubmit","input","placeholder","value","onChangeText","placeholderTextColor","LIGHT_GRAY","secureTextEntry","loginButton","onPress","buttonText","registerButton","registerButtonText","create","flex","justifyContent","alignItems","backgroundColor","WHITE","fontSize","marginBottom","color","PRIMARY","fontWeight","width","height","borderColor","borderWidth","paddingHorizontal","DARK_GRAY","borderRadius","paddingVertical","textAlign"],"sources":["C:/xampp/htdocs/mineriaProyectoFront/src/screens/LoginScreen.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { Formik } from 'formik';\r\nimport { COLORS } from '../constants';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const handleLogin = async (values) => {\r\n    try {\r\n      // Lógica de autenticación aquí\r\n      const token = 'tokenEjemplo';\r\n\r\n      await login(token);\r\n      navigation.navigate('Home');\r\n    } catch (error) {\r\n      // Manejar errores de autenticación aquí\r\n    }\r\n  };\r\n\r\n  const handleRegisterPress = async() => {\r\n    try {\r\n        navigation.navigate('Register');\r\n      } catch (error) {\r\n        // Manejar errores de autenticación aquí\r\n      }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>¡Hola de nuevo!</Text>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={values => handleLogin(values)} // Llama a handleLogin cuando se envía el formulario\r\n      >\r\n        {({ handleChange, handleSubmit, values }) => (\r\n          <View>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Correo Electrónico\"\r\n              value={values.email}\r\n              onChangeText={handleChange('email')}\r\n              placeholderTextColor={COLORS.LIGHT_GRAY}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Contraseña\"\r\n              secureTextEntry\r\n              value={values.password}\r\n              onChangeText={handleChange('password')}\r\n              placeholderTextColor={COLORS.LIGHT_GRAY}\r\n            />\r\n            <TouchableOpacity style={styles.loginButton} onPress={handleSubmit}>\r\n              <Text style={styles.buttonText}>Iniciar Sesión</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </Formik>\r\n      <TouchableOpacity style={styles.registerButton} onPress={handleRegisterPress}>\r\n        <Text style={styles.registerButtonText}>Crear una cuenta</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: COLORS.WHITE,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: COLORS.PRIMARY,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    height: 50,\r\n    borderColor: COLORS.LIGHT_GRAY,\r\n    borderWidth: 1,\r\n    marginBottom: 20,\r\n    paddingHorizontal: 20,\r\n    color: COLORS.DARK_GRAY,\r\n    borderRadius: 10,\r\n  },\r\n  loginButton: {\r\n    borderColor: COLORS.PRIMARY,\r\n    borderWidth: 2,\r\n    backgroundColor: COLORS.PRIMARY,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: COLORS.PRIMARY,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  registerButton: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n  },\r\n  registerButtonText: {\r\n    color: COLORS.PRIMARY,\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
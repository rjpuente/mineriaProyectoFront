{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CameraConnectScreen = function CameraConnectScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    cameraIp = _useState2[0],\n    setCameraIp = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    connected = _useState4[0],\n    setConnected = _useState4[1];\n  useEffect(function () {\n    if (connected) {\n      axios.get(\"http://\" + cameraIp + \":4747/video\").then(function (response) {\n        if (response.status !== 200) {\n          console.error(\"Error al conectarse a la cámara:\", response.status);\n          setConnected(false);\n        }\n      });\n    }\n  }, [connected, cameraIp]);\n  var handleConnect = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(\"http://\" + cameraIp + \":4747/video\");\n        if (response.status === 200) {\n          console.log(\"Conectado exitosamente\");\n          setConnected(true);\n        }\n      } catch (error) {\n        console.error(\"Error al conectarse a la cámara:\", error);\n      }\n    });\n    return function handleConnect() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: !connected ? _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Ingrese la IP de la c\\xE1mara\",\n        value: cameraIp,\n        onChangeText: setCameraIp\n      }), _jsx(Button, {\n        title: \"Conectar\",\n        onPress: handleConnect\n      })]\n    }) : _jsx(View, {\n      children: _jsxs(\"video\", {\n        autoPlay: true,\n        controls: true,\n        children: [_jsx(\"source\", {\n          src: \"http://\" + cameraIp + \":4747/video\",\n          type: \"video/mp4\"\n        }), \"Su navegador no admite la etiqueta de video.\"]\n      })\n    })\n  });\n};\nexport default CameraConnectScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Button","axios","jsx","_jsx","jsxs","_jsxs","CameraConnectScreen","_useState","_useState2","_slicedToArray","cameraIp","setCameraIp","_useState3","_useState4","connected","setConnected","get","then","response","status","console","error","handleConnect","_ref","_asyncToGenerator","log","apply","arguments","children","placeholder","value","onChangeText","title","onPress","autoPlay","controls","src","type"],"sources":["C:/Users/Deth1/Desarrollo/mineriaProyectoFront/src/Screens/CameraConnectScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, TextInput, Button } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\nconst CameraConnectScreen = () => {\r\n  const [cameraIp, setCameraIp] = useState(\"\");\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (connected) {\r\n      // Realiza una solicitud HTTP para verificar si la cámara está disponible\r\n      axios.get(`http://${cameraIp}:4747/video`).then((response) => {\r\n        if (response.status !== 200) {\r\n          console.error(\"Error al conectarse a la cámara:\", response.status);\r\n          setConnected(false);\r\n        }\r\n      });\r\n    }\r\n  }, [connected, cameraIp]);\r\n\r\n  const handleConnect = async () => {\r\n    try {\r\n      // Realiza una solicitud HTTP para conectarse a la cámara usando su IP\r\n      const response = await axios.get(`http://${cameraIp}:4747/video`);\r\n\r\n      // Si la respuesta es exitosa, establece el estado \"connected\" en verdadero\r\n      if (response.status === 200) {\r\n        console.log(\"Conectado exitosamente\");\r\n        setConnected(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al conectarse a la cámara:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {!connected ? (\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Ingrese la IP de la cámara\"\r\n            value={cameraIp}\r\n            onChangeText={setCameraIp}\r\n          />\r\n          <Button title=\"Conectar\" onPress={handleConnect} />\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <video autoPlay controls>\r\n            <source src={`http://${cameraIp}:4747/video`} type=\"video/mp4\" />\r\n            Su navegador no admite la etiqueta de video.\r\n          </video>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CameraConnectScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAChC,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAkChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BhB,SAAS,CAAC,YAAM;IACd,IAAIiB,SAAS,EAAE;MAEbb,KAAK,CAACe,GAAG,aAAWN,QAAQ,gBAAa,CAAC,CAACO,IAAI,CAAC,UAACC,QAAQ,EAAK;QAC5D,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3BC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEH,QAAQ,CAACC,MAAM,CAAC;UAClEJ,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACD,SAAS,EAAEJ,QAAQ,CAAC,CAAC;EAEzB,IAAMY,aAAa;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAChC,IAAI;QAEF,IAAMN,QAAQ,SAASjB,KAAK,CAACe,GAAG,aAAWN,QAAQ,gBAAa,CAAC;QAGjE,IAAIQ,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3BC,OAAO,CAACK,GAAG,CAAC,wBAAwB,CAAC;UACrCV,YAAY,CAAC,IAAI,CAAC;QACpB;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAAA,gBAbKC,aAAaA,CAAA;MAAA,OAAAC,IAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAalB;EAED,OACExB,IAAA,CAACL,IAAI;IAAA8B,QAAA,EACF,CAACd,SAAS,GACTT,KAAA,CAACP,IAAI;MAAA8B,QAAA,GACHzB,IAAA,CAACJ,SAAS;QACR8B,WAAW,EAAC,+BAA4B;QACxCC,KAAK,EAAEpB,QAAS;QAChBqB,YAAY,EAAEpB;MAAY,CAC3B,CAAC,EACFR,IAAA,CAACH,MAAM;QAACgC,KAAK,EAAC,UAAU;QAACC,OAAO,EAAEX;MAAc,CAAE,CAAC;IAAA,CAC/C,CAAC,GAEPnB,IAAA,CAACL,IAAI;MAAA8B,QAAA,EACHvB,KAAA;QAAO6B,QAAQ;QAACC,QAAQ;QAAAP,QAAA,GACtBzB,IAAA;UAAQiC,GAAG,cAAY1B,QAAQ,gBAAc;UAAC2B,IAAI,EAAC;QAAW,CAAE,CAAC,gDAEnE;MAAA,CAAO;IAAC,CACJ;EACP,CACG,CAAC;AAEX,CAAC;AAED,eAAe/B,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
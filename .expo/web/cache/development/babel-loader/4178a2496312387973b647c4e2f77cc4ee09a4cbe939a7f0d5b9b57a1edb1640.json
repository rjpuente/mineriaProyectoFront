{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from 'formik';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useTogglePasswordVisibility } from \"../hooks/useTogglePassVisibility\";\nimport { COLORS } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = yup.object().shape({\n  username: yup.string().required('El usuario es requerido'),\n  password: yup.string().required('La contraseña es requerida')\n});\nvar LoginScreen = function LoginScreen(_ref) {\n  var setRegisterUser = _ref.setRegisterUser;\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  var _useTogglePasswordVis = useTogglePasswordVisibility(),\n    passwordVisibility = _useTogglePasswordVis.passwordVisibility,\n    rightIcon = _useTogglePasswordVis.rightIcon,\n    handlePasswordVisibility = _useTogglePasswordVis.handlePasswordVisibility;\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* (values) {\n      try {\n        var token = 'tokenEjemplo';\n        yield login(token);\n        navigation.navigate('Home');\n      } catch (error) {}\n    });\n    return function handleLogin(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Iniciar Sesi\\xF3n\"\n    }), _jsx(Formik, {\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleLogin,\n      children: function children(_ref3) {\n        var handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit,\n          values = _ref3.values,\n          errors = _ref3.errors,\n          touched = _ref3.touched;\n        return _jsxs(View, {\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Usuario\",\n            onChangeText: handleChange('username'),\n            value: values.username\n          }), touched.username && errors.username && _jsx(Text, {\n            children: errors.username\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Contrase\\xF1a\",\n            secureTextEntry: !passwordVisibility,\n            onChangeText: handleChange('password'),\n            value: values.password\n          }), touched.password && errors.password && _jsx(Text, {\n            children: errors.password\n          }), _jsx(TouchableOpacity, {\n            onPress: handlePasswordVisibility,\n            children: _jsx(Text, {\n              children: rightIcon\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              children: \"Iniciar Sesi\\xF3n\"\n            })\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setRegisterUser(true);\n      },\n      children: _jsx(Text, {\n        children: \"Reg\\xEDstrate\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({});\nexport default LoginScreen;","map":{"version":3,"names":["React","useContext","View","Text","TextInput","TouchableOpacity","StyleSheet","Formik","AuthContext","useTogglePasswordVisibility","COLORS","jsx","_jsx","jsxs","_jsxs","validationSchema","yup","object","shape","username","string","required","password","LoginScreen","_ref","setRegisterUser","_useContext","login","_useTogglePasswordVis","passwordVisibility","rightIcon","handlePasswordVisibility","handleLogin","_ref2","_asyncToGenerator","values","token","navigation","navigate","error","_x","apply","arguments","style","styles","container","children","title","initialValues","onSubmit","_ref3","handleChange","handleSubmit","errors","touched","input","placeholder","onChangeText","value","secureTextEntry","onPress","create"],"sources":["C:/xampp/htdocs/mineriaProyectoFront/src/screens/LoginScreen.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport { AuthContext } from '../context/AuthContext'; // Asegúrate de que este import sea correcto\r\nimport { useTogglePasswordVisibility } from '../hooks/useTogglePassVisibility';\r\nimport { COLORS } from '../constants';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required('El usuario es requerido'),\r\n  password: yup.string().required('La contraseña es requerida')\r\n});\r\n\r\nconst LoginScreen = ({ setRegisterUser }) => {\r\n  const { login } = useContext(AuthContext);\r\n  const { passwordVisibility, rightIcon, handlePasswordVisibility } = useTogglePasswordVisibility();\r\n\r\n  const handleLogin = async (values) => {\r\n    try {\r\n      // Lógica de autenticación aquí\r\n      const token = 'tokenEjemplo';\r\n      await login(token);\r\n      navigation.navigate('Home');\r\n    } catch (error) {\r\n      // Manejar errores de autenticación aquí\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Iniciar Sesión</Text>\r\n      <Formik\r\n        initialValues={{ username: '', password: '' }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleLogin}\r\n      >\r\n        {({ handleChange, handleSubmit, values, errors, touched }) => (\r\n          <View>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Usuario\"\r\n              onChangeText={handleChange('username')}\r\n              value={values.username}\r\n            />\r\n            {touched.username && errors.username && <Text>{errors.username}</Text>}\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Contraseña\"\r\n              secureTextEntry={!passwordVisibility}\r\n              onChangeText={handleChange('password')}\r\n              value={values.password}\r\n            />\r\n            {touched.password && errors.password && <Text>{errors.password}</Text>}\r\n\r\n            <TouchableOpacity onPress={handlePasswordVisibility}>\r\n              <Text>{rightIcon}</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={handleSubmit}>\r\n              <Text>Iniciar Sesión</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </Formik>\r\n\r\n      <TouchableOpacity onPress={() => setRegisterUser(true)}>\r\n        <Text>Regístrate</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  // Estilos aquí\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
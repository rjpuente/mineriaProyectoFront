{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport io from 'socket.io-client';\nimport { COLORS } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CameraConnectScreen = function CameraConnectScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    connected = _useState2[0],\n    setConnected = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    devices = _useState4[0],\n    setDevices = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDevice = _useState6[0],\n    setSelectedDevice = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    socket = _useState8[0],\n    setSocket = _useState8[1];\n  var webcamRef = useRef(null);\n  useEffect(function () {\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      var cameras = devices.filter(function (device) {\n        return device.kind === 'videoinput';\n      });\n      setDevices(cameras);\n    });\n  }, []);\n  var handleConnect = function handleConnect() {\n    setConnected(true);\n    var newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n  };\n  useEffect(function () {\n    if (socket) {\n      socket.on('prediction', function (prediction) {\n        console.log('Prediction received:', prediction);\n      });\n      socket.on('error', function (error) {\n        console.error('Error received:', error);\n      });\n    }\n  }, [socket]);\n  var handleSendImage = function handleSendImage() {\n    if (socket && selectedDevice && webcamRef.current) {\n      var imageSrc = webcamRef.current.getScreenshot();\n      socket.emit('image', imageSrc);\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: !connected ? _jsxs(View, {\n      children: [_jsxs(Picker, {\n        selectedValue: selectedDevice,\n        onValueChange: function onValueChange(value) {\n          return setSelectedDevice(value);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Seleccionar c\\xE1mara\",\n          value: \"\"\n        }), devices.map(function (device) {\n          return _jsx(Picker.Item, {\n            label: device.label || \"C\\xE1mara \" + device.deviceId,\n            value: device.deviceId\n          }, device.deviceId);\n        })]\n      }), _jsx(Button, {\n        title: \"Conectar a la c\\xE1mara\",\n        onPress: handleConnect,\n        disabled: !selectedDevice\n      })]\n    }) : _jsxs(View, {\n      style: styles.webcamContainer,\n      children: [_jsx(Webcam, {\n        audio: false,\n        videoConstraints: {\n          deviceId: selectedDevice\n        },\n        ref: webcamRef\n      }), _jsx(Button, {\n        title: \"Enviar Imagen\",\n        onPress: handleSendImage\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.WHITE\n  },\n  webcamContainer: {\n    alignItems: 'center'\n  },\n  formContainer: {\n    alignItems: 'center'\n  },\n  picker: {\n    width: '100%',\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  connectButton: {\n    backgroundColor: COLORS.PRIMARY,\n    color: COLORS.WHITE,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  sendImageButton: {\n    marginTop: 10,\n    backgroundColor: COLORS.SECONDARY,\n    color: COLORS.WHITE,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  }\n});\nexport default CameraConnectScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","Webcam","View","Text","Button","Picker","StyleSheet","io","COLORS","jsx","_jsx","jsxs","_jsxs","CameraConnectScreen","_useState","_useState2","_slicedToArray","connected","setConnected","_useState3","_useState4","devices","setDevices","_useState5","_useState6","selectedDevice","setSelectedDevice","_useState7","_useState8","socket","setSocket","webcamRef","navigator","mediaDevices","enumerateDevices","then","cameras","filter","device","kind","handleConnect","newSocket","on","prediction","console","log","error","handleSendImage","current","imageSrc","getScreenshot","emit","style","styles","container","children","selectedValue","onValueChange","value","Item","label","map","deviceId","title","onPress","disabled","webcamContainer","audio","videoConstraints","ref","create","flex","justifyContent","alignItems","backgroundColor","WHITE","formContainer","picker","width","height","borderColor","borderWidth","marginBottom","paddingHorizontal","connectButton","PRIMARY","color","paddingVertical","sendImageButton","marginTop","SECONDARY"],"sources":["C:/xampp/htdocs/mineriaProyectoFront/src/screens/CameraConnectScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport { View, Text, Button, Picker, StyleSheet } from 'react-native';\r\nimport io from 'socket.io-client';\r\nimport { COLORS } from '../constants';\r\n\r\nconst CameraConnectScreen = () => {\r\n  const [connected, setConnected] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const webcamRef = useRef(null); // Referencia a la webcam\r\n\r\n  useEffect(() => {\r\n    // Obtener la lista de dispositivos de entrada disponibles\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const cameras = devices.filter((device) => device.kind === 'videoinput');\r\n      setDevices(cameras);\r\n    });\r\n  }, []);\r\n\r\n  const handleConnect = () => {\r\n    // Conectar a la cámara seleccionada\r\n    setConnected(true);\r\n\r\n    // Establecer la conexión WebSocket\r\n    const newSocket = io('http://localhost:5000'); // Cambia la URL a tu backend\r\n    setSocket(newSocket);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      // Escuchar eventos desde el backend\r\n      socket.on('prediction', (prediction) => {\r\n        console.log('Prediction received:', prediction);\r\n        // Aquí puedes mostrar la notificación o realizar otras acciones según la predicción\r\n      });\r\n\r\n      socket.on('error', (error) => {\r\n        console.error('Error received:', error);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const handleSendImage = () => {\r\n    if (socket && selectedDevice && webcamRef.current) {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n\r\n      // Enviar la imagen al backend a través del socket\r\n      socket.emit('image', imageSrc);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {!connected ? (\r\n        <View>\r\n          <Picker\r\n            selectedValue={selectedDevice}\r\n            onValueChange={(value) => setSelectedDevice(value)}\r\n          >\r\n            <Picker.Item label=\"Seleccionar cámara\" value=\"\" />\r\n            {devices.map((device) => (\r\n              <Picker.Item\r\n                key={device.deviceId}\r\n                label={device.label || `Cámara ${device.deviceId}`}\r\n                value={device.deviceId}\r\n              />\r\n            ))}\r\n          </Picker>\r\n          <Button\r\n            title=\"Conectar a la cámara\"\r\n            onPress={handleConnect}\r\n            disabled={!selectedDevice}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.webcamContainer}>\r\n          <Webcam audio={false} videoConstraints={{ deviceId: selectedDevice }} ref={webcamRef} />\r\n          <Button title=\"Enviar Imagen\" onPress={handleSendImage} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: COLORS.WHITE,\r\n  },\r\n  webcamContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  formContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  picker: {\r\n    width: '100%',\r\n    height: 50,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  connectButton: {\r\n    backgroundColor: COLORS.PRIMARY,\r\n    color: COLORS.WHITE,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  sendImageButton: {\r\n    marginTop: 10,\r\n    backgroundColor: COLORS.SECONDARY,\r\n    color: COLORS.WHITE,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  }\r\n});\r\n\r\nexport default CameraConnectScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}